@model IEnumerable<MusicR8r.Models.AlbumViewModel>
@using Kendo.Mvc.UI;

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.Kendo().TextBox().Name("Search")
@Html.Kendo().Button().Name("GridSeachButton").Events(ev => ev.Click("searchGrid")).Content("Search")

@(Html.Kendo().Grid(Model)
                    .Name("grid")
                    .Columns(columns =>
                    {
                    columns.Bound(album => album.Name).Title("Album").Width("50%");
                    columns.Bound(album => album.ArtistName).Title("Artist").Width("20%");
                    columns.Bound(album => album.Year).Title("Year").Width("20%");
                    columns.Template(@<text>Details</text>)
                        .ClientTemplate(@Html.ActionLink("Details", "Details", "Albums", new { ID = "#=Id#" }, new { @class = "k-button" }).ToHtmlString()).Width("5%");
                    
                    columns.Template(@<text>Songs</text>)
                        .ClientTemplate(@Html.ActionLink("Songs", "All", "Songs", new { albumId = "#=Id#" }, new { @class = "k-button" }).ToHtmlString()).Width("5%");
                    @*columns.Template(@<text>Add to collection</text>)
                        .ClientTemplate(@Html.ActionLink("Add to collection", "Delete", "Albums", new { ID = "#=Id#" }, new { @class = "k-button" }).ToHtmlString()).Width("13%").Hidden(!@Request.IsAuthenticated);
                    columns.Template(@<text>Remove from collection</text>)
                        .ClientTemplate(@Html.ActionLink("Remove from collection", "All", "Songs", new { albumId = "#=Id#" }, new { @class = "k-button" }).ToHtmlString()).Width("17%").Hidden(!@Request.IsAuthenticated);*@
                    })
                    .Pageable()
                    .Sortable()
                    .HtmlAttributes(new { style = "height:70%;" })
                    .DataSource(dataSource => dataSource
                        .Ajax()
                        .PageSize(20)
                        .Read(read => read.Action("ListAlbums", "Albums"))
                     )
)


<script>
    //function searchGrid(e) {
    //    $("#Grid").data("kendoGrid").dataSource.filter({
    //        logic: "or", filters: [{ field: "Name", operator: "contains", value: $("#Search").val() }]

    //    });
    //}
    function searchGrid(e) {
        const value = $("#Search").val();

        $("#grid").data("kendoGrid").dataSource.filter({
            logic: "or",
            filters: [
                { field: "Name", operator: "contains", value:  value},
                { field: "ArtistName", operator: "contains", value: value }
            ]
        });
        //$("#grid").data("kendoGrid").dataSource.filter({ field: "Year", operator: "contains", value: $("#Search").val() });
        //$("#grid").data("kendoGrid").dataSource.filter({ field: "Year", operator: "contains", value: $("#Search").val() });
    }
</script>
